// Test generated by RoostGPT for test test1 using AI Model gpt

```go
package main

import (
	"net/http"
	"net/http/httptest"
	"testing"
)

func TestMain2b8a936782(t *testing.T) {
	// Test Case 1: Check if the server is running and responding
	t.Run("Server Running Test", func(t *testing.T) {
		req, err := http.NewRequest("GET", "/", nil)
		if err != nil {
			t.Fatalf("Could not create request: %v", err)
		}
		rec := httptest.NewRecorder()
		serveRoot(rec, req)
		res := rec.Result()
		if res.StatusCode != http.StatusOK {
			t.Errorf("Expected status OK; got %v", res.Status)
		}
	})

	// Test Case 2: Check if the tests are running
	t.Run("Run Test Endpoint Test", func(t *testing.T) {
		req, err := http.NewRequest("GET", "/tests/run", nil)
		if err != nil {
			t.Fatalf("Could not create request: %v", err)
		}
		rec := httptest.NewRecorder()
		runTest(rec, req)
		res := rec.Result()
		if res.StatusCode != http.StatusOK {
			t.Errorf("Expected status OK; got %v", res.Status)
		}
	})

	// Test Case 3: Check if the server fails to start due to invalid port
	t.Run("Invalid Port Test", func(t *testing.T) {
		port := "invalid_port" // TODO: Change this to the port you want to test
		err := http.ListenAndServe(net.JoinHostPort("", port), nil)
		if err == nil {
			t.Errorf("Expected error, got nil")
		}
	})
}