// Test generated by RoostGPT for test test1 using AI Model gpt

package main

import (
	"bytes"
	"fmt"
	"io"
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"
)

func TestHttpClientRequestdae1710fc2(t *testing.T) {
	t.Run("successful request", func(t *testing.T) {
		server := httptest.NewServer(http.HandlerFunc(func(rw http.ResponseWriter, req *http.Request) {
			fmt.Fprintln(rw, `{"message": "success"}`)
		}))
		defer server.Close()

		statusCode, body, err := httpClientRequest("GET", server.URL, "/test", nil)
		if err != nil {
			t.Error(err)
		}

		if statusCode != http.StatusOK {
			t.Errorf("Expected status code %d, got %d", http.StatusOK, statusCode)
		}

		if strings.TrimSpace(string(body)) != `{"message": "success"}` {
			t.Errorf("Expected body %s, got %s", `{"message": "success"}`, body)
		}
	})

	t.Run("failed request", func(t *testing.T) {
		server := httptest.NewServer(http.HandlerFunc(func(rw http.ResponseWriter, req *http.Request) {
			http.Error(rw, "failed", http.StatusInternalServerError)
		}))
		defer server.Close()

		statusCode, body, err := httpClientRequest("GET", server.URL, "/test", nil)
		if err == nil {
			t.Error("Expected error, got nil")
		}

		if statusCode != http.StatusInternalServerError {
			t.Errorf("Expected status code %d, got %d", http.StatusInternalServerError, statusCode)
		}

		if strings.TrimSpace(string(body)) != "failed" {
			t.Errorf("Expected body %s, got %s", "failed", body)
		}
	})
}